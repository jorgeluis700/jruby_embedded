--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Creates a class-variable attribute that can be accessed both on an instance and class level.
  - !ruby/struct:SM::Flow::VERB 
    body: "  c = Class.new do\n    mattr :a\n    def initialize\n      @@a = 10\n    end\n  end\n\n  c.new.a       #=&gt; 10\n  c.a           #=&gt; 10\n"
  - !ruby/struct:SM::Flow::P 
    body: "NOTE: The #mattr methods may not be as useful for modules as the #cattr methods are for classes, becuase class-level methods are not &quot;inherited&quot; across the metaclass for included modules."
  - !ruby/struct:SM::Flow::P 
    body: "CREDIT: David Heinemeier Hansson"
full_name: Module#mattr
is_singleton: false
name: mattr
params: (*syms)
visibility: public
