--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: temp_file
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Write to a file atomically. Useful for situations where you don't want other processes or threads to see half-written files.
  - !ruby/struct:SM::Flow::VERB 
    body: "  AtomicFile.write(&quot;tmp/important.file&quot;) do |file|\n    file.write(&quot;hello&quot;)\n  end\n"
  - !ruby/struct:SM::Flow::P 
    body: If your temporary directory is not on the same filesystem as the file you're trying to write, you can provide a different temporary directory.
  - !ruby/struct:SM::Flow::VERB 
    body: "  AtomicFile.write(&quot;tmp/something.important&quot;, &quot;tmp&quot;) do |file|\n    file.write(&quot;hello&quot;)\n  end\n"
full_name: AtomicFile::write
is_singleton: true
name: write
params: (file_name, temp_dir=nil) {|temp_file| ...}
visibility: public
