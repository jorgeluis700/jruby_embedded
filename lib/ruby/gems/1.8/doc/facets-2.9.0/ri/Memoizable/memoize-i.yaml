--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Directive for making your functions faster by trading space for time. When you &quot;memoize&quot; a method/function using #memoize its results are cached so that later calls with the same arguments return results from the cache instead of recalculating them."
  - !ruby/struct:SM::Flow::P 
    body: "The #memoize method also handles a few options to alter behavior of the memoization:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  :class     =&gt; true      cache per-class not per-object\n  :freeze    =&gt; true      freeze the memoized return values\n  :arguments =&gt; false     do not index cache by arguments\n"
full_name: Memoizable#memoize
is_singleton: false
name: memoize
params: (*method_names)
visibility: public
